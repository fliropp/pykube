# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import pykube_pb2 as pykube__pb2


class PingStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetPing = channel.unary_unary(
        '/grpc.Ping/GetPing',
        request_serializer=pykube__pb2.PingReq.SerializeToString,
        response_deserializer=pykube__pb2.PingResp.FromString,
        )
    self.StreamPing = channel.unary_stream(
        '/grpc.Ping/StreamPing',
        request_serializer=pykube__pb2.PingReq.SerializeToString,
        response_deserializer=pykube__pb2.PingResp.FromString,
        )


class PingServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetPing(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StreamPing(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PingServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetPing': grpc.unary_unary_rpc_method_handler(
          servicer.GetPing,
          request_deserializer=pykube__pb2.PingReq.FromString,
          response_serializer=pykube__pb2.PingResp.SerializeToString,
      ),
      'StreamPing': grpc.unary_stream_rpc_method_handler(
          servicer.StreamPing,
          request_deserializer=pykube__pb2.PingReq.FromString,
          response_serializer=pykube__pb2.PingResp.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'grpc.Ping', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
